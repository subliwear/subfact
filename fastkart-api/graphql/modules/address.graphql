type Address {
    id: Int
    title: String
    user_id: Int
    street: String
    city: String
    pincode: String
    country_code: String
    phone: String
    is_default: Int
    country_id: Int
    state_id: Int
    country: Country
    state: State
    created_at: DateTimeUtc
    updated_at: DateTimeUtc
}

input CreateAddressInput {
    title: String
    user_id: Int
    street: String
    pincode: String
    country_code: String
    phone: String
    is_default: Int
    city: String
    country_id: Int
    state_id: Int
}

input UpdateAddressInput {
    id: Int!
    title: String
    street: String
    user_id: Int
    pincode: String
    country_code: String
    phone: String
    is_default: Int
    city: String
    country_id: Int
    state_id: Int
}

input DeleteAddressInput {
    id: Int
}

extend type Mutation @guard {
    createAddress(input: CreateAddressInput @spread): Address
        @field(resolver: "AddressMutator@store")

    updateAddress(input: UpdateAddressInput @spread): Address
        @field(resolver: "AddressMutator@update")

    deleteAddress(input: DeleteAddressInput @spread): Boolean!
        @field(resolver: "AddressMutator@destroy")
}

extend type Query @guard {
    addresses(
        search: String
        paginate: Int
    ): [Address!]!  @paginate(resolver: "App\\GraphQL\\Queries\\AddressQuery@index" defaultCount:15)
    address(id: Int @eq): Address @find
}
